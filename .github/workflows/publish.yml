name: Publish

on:
  push:
    branches: [ "master" ]

jobs:

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebug

  apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Assemble app debug APK
        run: ./gradlew assembleDebug

      - name: Upload app APK
        uses: actions/upload-artifact@v3.1.3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Assemble app instrumental tests
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload app test APK
        uses: actions/upload-artifact@v3.1.3
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

      #      - name: Grant execute permission for gradlew
      #        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebug

  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: apk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download app test APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest

      - id: Auth
        uses: google-github-actions/auth@v1
        with:
          project_id: ${{ secrets.FIREBASE_APP_ID }}
          credentials_json: ${{ secrets.FIREBASE_CREDENTIAL_FILE }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Use gcloud CLI
        run: gcloud info

  #      - name: Run instrumentation tests in Firebase Test Lab
  #        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=blueline,version=28
  #        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=flame,version=30

  distribute:
    name: Distribute the app bundle for play store
    needs: firebase
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Version bump
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}

      - name: Assemble Release Bundle
        run: ./gradlew bundleRelease

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyPassword: ${{ secrets.KEYS_PASSWORD }}

#      - name: Debug Service Account JSON
#        run: echo "${{ secrets.GOOGLE_SERVICE_API_NEW }}"
#
#      - name: Debug Release Files
#        run: ls -R app/build/outputs/bundle/release
#
#      - name: upload at play store
#        uses: swootte/upload-google-play@V1.1.5
#        with:
#          serviceAccountJson: ${{ secrets.GOOGLE_SERVICE_API_NEW }}
#          packageName: com.example.MyApp
#          releaseFiles: app/build/outputs/bundle/release/*.aab
#          track: production
#          inAppUpdatePriority: 2
#          userFraction: 0.33
#          whatsNewDirectory: whatsNewDirectory/
#          mappingFile: app/build/outputs/mapping/release/mapping.txt
#          status: draft
#          changesNotSentForReview: true


      - name: Create authorization with google play store service-account.json
        run: echo '${{ secrets.DEPLOY_AUTH_API_BASE }}' > service_account.json

      - name: Print Service Account JSON
        run: cat service_account.json

      - name: Deploy to alpha
        uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJsonPlainText: ${{ secrets.DEPLOY_AUTH_API }}
#          serviceAccountJson: service_account.json
          packageName: com.alim.letsconnect
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: alpha
          status: 'draft'
#          status: 'completed'
          whatsNewDirectory: whatsNewDirectory/

